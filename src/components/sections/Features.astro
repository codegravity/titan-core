---
import { Image } from 'astro:assets';
import type { Feature } from '@data/features';
import Button from '@components/ui/Button.astro';
import Eyebrow from '@components/ui/Eyebrow.astro';
import { getPaddingClass, getBackgroundColor, getTextColor } from '@utils/styleUtils';
import type { PaddingSize, ThemeColor } from '@utils/styleUtils';

export interface Props {
    content: {
        eyebrow?: string;
        title?: string;
        description?: string;
        button?: {
            text: string;
            link: string;
            variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        };
        features: Feature[];
    };
    background?: ThemeColor;
    padding?: PaddingSize;
    paddingTop?: PaddingSize;
    paddingBottom?: PaddingSize;
}

const {
    content: {
        eyebrow,
        title,
        description,
        button,
        features
    },
    background = 'base'
} = Astro.props;

const bgColor = getBackgroundColor(background);
const textColor = getTextColor(background);
const paddingClass = getPaddingClass({ 
    padding: Astro.props.padding,
    paddingTop: Astro.props.paddingTop,
    paddingBottom: Astro.props.paddingBottom 
});
---

<section class:list={["relative", bgColor, paddingClass]}>
    <div class="site-container px-4">
        {(title || description) && (
            <div class="text-center mb-16 max-w-3xl mx-auto">
                {eyebrow && (
                    <Eyebrow 
                        text={eyebrow} 
                        background={background} 
                    />
                )}
                {title && (
                    <h2 class:list={[textColor]} data-aos="fade-up">
                        {title}
                    </h2>
                )}
                {description && (
                    <p class:list={["mt-4", textColor, "opacity-90"]} data-aos="fade-up" data-aos-delay="100">
                        {description}
                    </p>
                )}
                {button && (
                    <div class="mt-8" data-aos="fade-up" data-aos-delay="200">
                        <Button
                            href={button.link}
                            variant={button.variant || 'primary'}
                        >
                            {button.text}
                        </Button>
                    </div>
                )}
            </div>
        )}

        <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-auto-fit gap-8 auto-rows-fr">
            {features.map((feature, index) => (
                <div class="border-white border-b rounded-lg border relative aspect-[16/9] overflow-hidden group-hover:border-primary transition-colors duration-300">
                    <div 
                        class:list={[
                            "flex flex-col border-white border-b rounded-lg border relative aspect-[16/9]  group-hover:border-primary transition-colors duration-300"
                        ]}
                        data-aos="fade-up"
                        data-aos-delay={index * 100}
                    >
                        <Image
                            src={feature.src}
                            alt={feature.alt}
                            width={600}
                            height={338}
                            quality={70}
                            format="webp"
                            class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300 "
                        />
                    </div>
               
                   <div class="absolute top-0 left-0 right-0 ">    
                            <h4 class:list={["text-h4   px-6 py-4 text-white-400"]}>{feature.title}</h4>   
                    </div>
                    <div class="absolute bottom-0 left-0 right-0 ">    
                            <p class:list={["text-base p-6 text-white"]}>{feature.description}</p>  
                    </div>

           
            </div> <!-- end feature -->
    
            ))}
        </div>
    </div>
</section>

<style>
    .grid-cols-auto-fit {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
</style>
