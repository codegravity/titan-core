---
import { Swiper, SwiperWrapper, SwiperSlide, SwiperPagination } from "astro-swiper";
//import { SwiperButtonPrev, SwiperButtonNext } from "astro-swiper";
import { Image } from 'astro:assets';
import Button from '@components/ui/Button.astro';


interface SwiperHeroContent {
    title: string;
    description: string;
        buttons?: {
        text: string;
        link: string;
        variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        target?: string;
    }[];
    swiperImages?: {
        swiperBackgroundImage?: string | any ;
    }[];
   
    
  //  backgroundImage?: string | any; // Using any for now to handle both string paths and imported images
    overlayOpacity?: number; // Value between 0 and 1
}

interface Props {
    content: SwiperHeroContent;
}

const { content } = Astro.props;
const opacity = content.overlayOpacity ?? 1; // Default opacity if not specified
---

<section class="header-offset relative h-screen">
    {content.swiperImages && content.swiperImages.length > 0 && (
        <div class="absolute inset-0 left-0 top-0 w-full h-full overflow-hidden">
            <Swiper
                options={{    // check options at https://swiperjs.com/swiper-api
                autoplay: {
                    delay: 8000,
                    disableOnInteraction: false,
                    waitForTransition: false,  
                },
                loop: true,
                speed: 2800
            }}>
            <SwiperWrapper>
                {content.swiperImages.map((image) => (   
                <SwiperSlide>             
                    <Image
                        src={image.swiperBackgroundImage}
                        alt="Ã…reskutan"
                        width={1920}
                        height={1080}
                        class="w-full h-full object-cover object-bottom"
                        quality={80}
                        format="webp"
                        loading="eager"
                        decoding="async"
                    /> 
                </SwiperSlide>
                  ))}
            </SwiperWrapper>
            {/* <SwiperPagination /> */}
            </Swiper>
          
            </div>
            <div class="hero-background absolute inset-0 left-0 top-0 w-full h-full overflow-hidden" style={`opacity: ${opacity};`} ></div>  
    )}
    <div class="site-container mx-auto px-4 pt-0 pb-40 relative z-10 flex flex-col h-screen md:items-center md:justify-center md:text-center">
        <h1 class="text-white text-balance" data-aos="fade-up">{content.title}</h1>
        <p class="text-white mt-2 text-balance" data-aos="fade-up" data-aos-delay="100">{content.description}</p>
        {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8" data-aos="fade-up">
                {content.buttons.map((button) => (
                    <Button
                        href={button.link}
                        target={button.target || '_self'}
                        variant={button.variant || 'primary'}
                    >
                        {button.text}
                    </Button>
                ))}
            </div>
        )}
    </div>
</section>
